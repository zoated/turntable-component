{"version":3,"file":"getTagProcessor.js","names":["last","arr","length","zip","arr1","arr2","result","i","push","buildCodeFrameError","path","message","Error","findPackageJSON","pkgName","filename","pkgPath","require","resolve","paths","dirname","findUp","sync","cwd","er","code","undefined","definedTagsCache","Map","getDefinedTagsFromPackage","has","get","packageJSONPath","packageDir","packageJSON","JSON","parse","readFileSync","definedTags","linaria","tags","normalizedTags","Object","entries","reduce","acc","key","value","startsWith","join","set","isValidProcessorClass","module","BaseProcessor","constructor","getProcessorFromPackage","packageName","tagName","processorPath","Processor","default","getProcessorFromFile","getProcessorForIdentifier","imports","options","pathBinding","scope","getBinding","node","name","tagResolver","relatedImports","map","local","isIdentifier","isDescendant","binding","filter","isNotNull","isExpression","tagSource","tagPath","imported","source","p","customFile","processor","find","proc","getBuilderForIdentifier","params","prev","current","parentPath","isSequenceExpression","expressions","isCallExpression","callee","args","cookedArgs","arg","buildError","bind","type","getSource","extracted","extractExpression","evaluate","isMemberExpression","object","property","computed","isStringLiteral","isTaggedTemplateExpression","tag","quasis","expressionValues","collectTemplateDependencies","replacer","replacement","isPure","mutate","replaceWith","addComment","astService","t","addDefaultImport","importedSource","nameHint","addDefault","addNamedImport","addNamed","loc","getDisplayName","idx","fileContext","displayName","parent","findParent","isObjectProperty","isJSXOpeningElement","isVariableDeclarator","toString","keyPath","isJSXIdentifier","id","basename","test","replace","isTagReferenced","isReferenced","referencePaths","counters","WeakMap","getNextIndex","state","counter","cache","getTagProcessor","root","getProgramParent","collectExportsAndImports","builder","explicitImport","e","SKIP"],"sources":["../../src/utils/getTagProcessor.ts"],"sourcesContent":["import { readFileSync } from 'fs';\nimport { basename, dirname, join } from 'path';\n\nimport { types as t } from '@babel/core';\nimport { addDefault, addNamed } from '@babel/helper-module-imports';\nimport type { NodePath } from '@babel/traverse';\nimport type {\n  Expression,\n  SourceLocation,\n  Identifier,\n  MemberExpression,\n} from '@babel/types';\nimport findUp from 'find-up';\n\nimport { BaseProcessor } from '@linaria/tags';\nimport type {\n  Param,\n  Params,\n  IFileContext,\n  ExpressionValue,\n  TagSource,\n} from '@linaria/tags';\nimport type { IImport, StrictOptions } from '@linaria/utils';\nimport {\n  collectExportsAndImports,\n  explicitImport,\n  isNotNull,\n  mutate,\n} from '@linaria/utils';\n\nimport collectTemplateDependencies, {\n  extractExpression,\n} from './collectTemplateDependencies';\nimport getSource from './getSource';\n\ntype BuilderArgs = ConstructorParameters<typeof BaseProcessor> extends [\n  Params,\n  TagSource,\n  typeof t,\n  SourceLocation | null,\n  (replacement: Expression, isPure: boolean) => void,\n  ...infer T\n]\n  ? T\n  : never;\n\ntype Builder = (...args: BuilderArgs) => BaseProcessor;\n\ntype ProcessorClass = new (\n  ...args: ConstructorParameters<typeof BaseProcessor>\n) => BaseProcessor;\n\nconst last = <T>(arr: T[]): T | undefined => arr[arr.length - 1];\n\nfunction zip<T1, T2>(arr1: T1[], arr2: T2[]) {\n  const result: (T1 | T2)[] = [];\n  for (let i = 0; i < arr1.length; i++) {\n    result.push(arr1[i]);\n    if (arr2[i]) result.push(arr2[i]);\n  }\n\n  return result;\n}\n\nfunction buildCodeFrameError(path: NodePath, message: string): Error {\n  try {\n    return path.buildCodeFrameError(message);\n  } catch {\n    return new Error(message);\n  }\n}\n\nfunction findPackageJSON(pkgName: string, filename: string | null | undefined) {\n  try {\n    const pkgPath = require.resolve(\n      pkgName,\n      filename ? { paths: [dirname(filename)] } : {}\n    );\n    return findUp.sync('package.json', { cwd: pkgPath });\n  } catch (er: unknown) {\n    if (\n      typeof er === 'object' &&\n      er !== null &&\n      (er as { code?: unknown }).code === 'MODULE_NOT_FOUND'\n    ) {\n      return undefined;\n    }\n\n    throw er;\n  }\n}\n\nconst definedTagsCache = new Map<string, Record<string, string> | undefined>();\nconst getDefinedTagsFromPackage = (\n  pkgName: string,\n  filename: string | null | undefined\n): Record<string, string> | undefined => {\n  if (definedTagsCache.has(pkgName)) {\n    return definedTagsCache.get(pkgName);\n  }\n\n  const packageJSONPath = findPackageJSON(pkgName, filename);\n  if (!packageJSONPath) {\n    return undefined;\n  }\n\n  const packageDir = dirname(packageJSONPath);\n  const packageJSON = JSON.parse(readFileSync(packageJSONPath, 'utf8'));\n  const definedTags: Record<string, string> | undefined =\n    packageJSON.linaria?.tags;\n\n  const normalizedTags = definedTags\n    ? Object.entries(definedTags).reduce(\n        (acc, [key, value]) => ({\n          ...acc,\n          [key]: value.startsWith('.')\n            ? join(packageDir, value)\n            : require.resolve(value, { paths: [packageDir] }),\n        }),\n        {} as Record<string, string>\n      )\n    : undefined;\n\n  definedTagsCache.set(pkgName, normalizedTags);\n\n  return normalizedTags;\n};\n\nfunction isValidProcessorClass(module: unknown): module is ProcessorClass {\n  return module instanceof BaseProcessor.constructor;\n}\n\nfunction getProcessorFromPackage(\n  packageName: string,\n  tagName: string,\n  filename: string | null | undefined\n): ProcessorClass | null {\n  const definedTags = getDefinedTagsFromPackage(packageName, filename);\n  const processorPath = definedTags?.[tagName];\n  if (!processorPath) {\n    return null;\n  }\n\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nfunction getProcessorFromFile(processorPath: string): ProcessorClass | null {\n  const Processor = require(processorPath).default;\n  if (!isValidProcessorClass(Processor)) {\n    return null;\n  }\n\n  return Processor;\n}\n\nfunction getProcessorForIdentifier(\n  path: NodePath<Identifier>,\n  imports: IImport[],\n  filename: string | null | undefined,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n):\n  | [ProcessorClass, TagSource, NodePath<Identifier | MemberExpression>]\n  | [null, null, null] {\n  const pathBinding = path.scope.getBinding(path.node.name);\n  if (!pathBinding) {\n    // It's not a binding, so it's not a tag\n    return [null, null, null];\n  }\n\n  const tagResolver = options.tagResolver ?? (() => null);\n\n  // FIXME: can be simplified\n  const relatedImports = imports\n    .map(\n      (i): [IImport, NodePath<Identifier | MemberExpression> | null] | null => {\n        const { local } = i;\n\n        if (local === path) {\n          return [i, null];\n        }\n\n        if (!local.isIdentifier()) {\n          if (path.isDescendant(local)) {\n            return [i, local];\n          }\n\n          return null;\n        }\n\n        const binding = local.scope.getBinding(local.node.name);\n        if (pathBinding === binding) {\n          return [i, path];\n        }\n\n        return null;\n      }\n    )\n    .filter(isNotNull)\n    .filter((i) => i[1] === null || i[1].isExpression());\n\n  if (relatedImports.length === 0) {\n    return [null, null, null];\n  }\n\n  const [Processor = null, tagSource = null, tagPath = null] =\n    relatedImports\n      .map(\n        ([{ imported, source }, p]): [\n          ProcessorClass | null,\n          TagSource,\n          NodePath<Identifier | MemberExpression> | null\n        ] => {\n          const customFile = tagResolver(source, imported);\n          const processor = customFile\n            ? getProcessorFromFile(customFile)\n            : getProcessorFromPackage(source, imported, filename);\n          return [processor, { imported, source }, p];\n        }\n      )\n      .find(([proc]) => proc) ?? [];\n\n  return Processor === null || tagSource === null || tagPath === null\n    ? [null, null, null]\n    : [Processor, tagSource, tagPath];\n}\n\nfunction getBuilderForIdentifier(\n  path: NodePath<Identifier>,\n  imports: IImport[],\n  filename: string | null | undefined,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): Builder | null {\n  const [Processor, tagSource, tagPath] = getProcessorForIdentifier(\n    path,\n    imports,\n    filename,\n    options\n  );\n\n  if (!Processor || !tagSource || !tagPath) {\n    return null;\n  }\n\n  const params: Param[] = [['callee', tagPath.node]];\n  let prev: NodePath = tagPath;\n  let current: NodePath | null = tagPath.parentPath;\n  while (current && current !== path) {\n    if (\n      current?.isSequenceExpression() &&\n      last(current.node.expressions) === prev.node\n    ) {\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isCallExpression({ callee: prev.node })) {\n      const args = current.get('arguments');\n      const cookedArgs = args\n        .map((arg) => {\n          const buildError = arg.buildCodeFrameError.bind(arg);\n          if (!arg.isExpression()) {\n            throw buildError(`Unexpected type of an argument ${arg.type}`);\n          }\n          const source = getSource(arg);\n          const extracted = extractExpression(arg, options.evaluate);\n          return {\n            ...extracted,\n            source,\n            buildCodeFrameError: buildError,\n          } as ExpressionValue;\n        })\n        .filter(isNotNull);\n\n      params.push(['call', ...cookedArgs]);\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isMemberExpression({ object: prev.node })) {\n      const property = current.get('property');\n      if (property.isIdentifier() && !current.node.computed) {\n        params.push(['member', property.node.name]);\n      } else if (property.isStringLiteral()) {\n        params.push(['member', property.node.value]);\n      } else {\n        throw property.buildCodeFrameError(`Unexpected type of a property`);\n      }\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (current?.isTaggedTemplateExpression({ tag: prev.node })) {\n      const [quasis, expressionValues] = collectTemplateDependencies(\n        current,\n        options.evaluate\n      );\n      params.push(['template', zip(quasis, expressionValues)]);\n\n      prev = current;\n      current = current.parentPath;\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    break;\n  }\n\n  const replacer = (replacement: Expression, isPure: boolean) => {\n    mutate(prev, (p) => {\n      p.replaceWith(replacement);\n      if (isPure) {\n        p.addComment('leading', '#__PURE__');\n      }\n    });\n  };\n\n  const astService = {\n    ...t,\n    addDefaultImport: (importedSource: string, nameHint?: string) =>\n      addDefault(path, importedSource, { nameHint }),\n    addNamedImport: (\n      name: string,\n      importedSource: string,\n      nameHint: string = name\n    ) => addNamed(path, name, importedSource, { nameHint }),\n  };\n\n  return (...args: BuilderArgs) =>\n    new Processor(\n      params,\n      tagSource,\n      astService,\n      tagPath.node.loc ?? null,\n      replacer,\n      ...args\n    );\n}\n\nfunction getDisplayName(\n  path: NodePath<Identifier>,\n  idx: number,\n  fileContext: IFileContext\n): string {\n  let displayName: string | undefined;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isObjectProperty()) {\n      if ('name' in parent.node.key) {\n        displayName = parent.node.key.name;\n      } else if ('value' in parent.node.key) {\n        displayName = parent.node.key.value.toString();\n      } else {\n        const keyPath = parent.get('key');\n        displayName = getSource(keyPath);\n      }\n    } else if (parent.isJSXOpeningElement()) {\n      const name = parent.get('name');\n      if (name.isJSXIdentifier()) {\n        displayName = name.node.name;\n      }\n    } else if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      if (id.isIdentifier()) {\n        displayName = id.node.name;\n      }\n    }\n  }\n\n  if (!displayName) {\n    const filename = fileContext.filename ?? 'unknown';\n    // Try to derive the path from the filename\n    displayName = basename(filename);\n\n    if (/^index\\.[a-z\\d]+$/.test(displayName)) {\n      // If the file name is 'index', better to get name from parent folder\n      displayName = basename(dirname(filename));\n    }\n\n    // Remove the file extension\n    displayName = displayName.replace(/\\.[a-z\\d]+$/, '');\n\n    if (displayName) {\n      displayName += idx;\n    } else {\n      throw new Error(\n        \"Couldn't determine a name for the component. Ensure that it's either:\\n\" +\n          '- Assigned to a variable\\n' +\n          '- Is an object property\\n' +\n          '- Is a prop in a JSX element\\n'\n      );\n    }\n  }\n\n  return displayName;\n}\n\nfunction isTagReferenced(path: NodePath): boolean {\n  // Check if the variable is referenced anywhere for basic DCE\n  // Only works when it's assigned to a variable\n  let isReferenced = true;\n\n  const parent = path.findParent(\n    (p) =>\n      p.isObjectProperty() ||\n      p.isJSXOpeningElement() ||\n      p.isVariableDeclarator()\n  );\n\n  if (parent) {\n    if (parent.isVariableDeclarator()) {\n      const id = parent.get('id');\n      // FIXME: replace with id.isReferencedIdentifier()\n      if (id.isIdentifier()) {\n        const { referencePaths } = path.scope.getBinding(id.node.name) || {\n          referencePaths: [],\n        };\n\n        isReferenced = referencePaths.length !== 0;\n      }\n    }\n  }\n\n  return isReferenced;\n}\n\nconst counters = new WeakMap<IFileContext, number>();\nconst getNextIndex = (state: IFileContext) => {\n  const counter = counters.get(state) ?? 0;\n  counters.set(state, counter + 1);\n  return counter;\n};\n\nconst cache = new WeakMap<Identifier, BaseProcessor | null>();\n\nexport default function getTagProcessor(\n  path: NodePath<Identifier>,\n  fileContext: IFileContext,\n  options: Pick<\n    StrictOptions,\n    'classNameSlug' | 'displayName' | 'evaluate' | 'tagResolver'\n  >\n): BaseProcessor | null {\n  if (!cache.has(path.node)) {\n    const root = path.scope.getProgramParent().path;\n    const { imports } = collectExportsAndImports(root);\n    try {\n      const builder = getBuilderForIdentifier(\n        path,\n        imports.filter(explicitImport),\n        fileContext.filename,\n        options\n      );\n      if (builder) {\n        // Increment the index of the style we're processing\n        // This is used for slug generation to prevent collision\n        // Also used for display name if it couldn't be determined\n        const idx = getNextIndex(fileContext);\n\n        const displayName = getDisplayName(path, idx, fileContext);\n\n        const processor = builder(\n          displayName,\n          isTagReferenced(path),\n          idx,\n          options,\n          fileContext\n        );\n\n        cache.set(path.node, processor);\n      } else {\n        cache.set(path.node, null);\n      }\n    } catch (e) {\n      if (e === BaseProcessor.SKIP) {\n        cache.set(path.node, null);\n        return null;\n      }\n\n      if (e instanceof Error) {\n        throw buildCodeFrameError(path, e.message);\n      }\n\n      throw e;\n    }\n  }\n\n  return cache.get(path.node) ?? null;\n}\n"],"mappings":"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"}