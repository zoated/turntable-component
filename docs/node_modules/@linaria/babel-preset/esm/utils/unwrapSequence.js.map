{"version":3,"file":"unwrapSequence.js","names":["unwrapSequence","path","isSequenceExpression","expressions","get","lastExpression","pop","undefined"],"sources":["../../src/utils/unwrapSequence.ts"],"sourcesContent":["import type { NodePath } from '@babel/traverse';\nimport type { Expression, V8IntrinsicIdentifier } from '@babel/types';\n\n/**\n * If expression is a sequence like `(a, b, c)`, returns `c`\n * otherwise returns an original expression\n * @param path\n */\nexport default function unwrapSequence(\n  path: NodePath<Expression | V8IntrinsicIdentifier>\n): NodePath<Expression | V8IntrinsicIdentifier> | undefined {\n  if (path.isSequenceExpression()) {\n    const [...expressions] = path.get('expressions');\n    const lastExpression = expressions.pop();\n    return lastExpression ? unwrapSequence(lastExpression) : undefined;\n  }\n\n  return path;\n}\n"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAc,CACpCC,IAAkD,EACQ;EAC1D,IAAIA,IAAI,CAACC,oBAAoB,EAAE,EAAE;IAC/B,MAAM,CAAC,GAAGC,WAAW,CAAC,GAAGF,IAAI,CAACG,GAAG,CAAC,aAAa,CAAC;IAChD,MAAMC,cAAc,GAAGF,WAAW,CAACG,GAAG,EAAE;IACxC,OAAOD,cAAc,GAAGL,cAAc,CAACK,cAAc,CAAC,GAAGE,SAAS;EACpE;EAEA,OAAON,IAAI;AACb"}