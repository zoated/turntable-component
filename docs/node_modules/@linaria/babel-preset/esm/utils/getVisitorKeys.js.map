{"version":3,"file":"getVisitorKeys.js","names":["types","t","getVisitorKeys","node","VISITOR_KEYS","type"],"sources":["../../src/utils/getVisitorKeys.ts"],"sourcesContent":["import { types as t } from '@babel/core';\nimport type { Node } from '@babel/types';\n\nexport type VisitorKeys<T extends Node> = {\n  [K in keyof T]: Exclude<T[K], undefined> extends Node | Node[] | null\n    ? K\n    : never;\n}[keyof T] &\n  string;\n\nexport default function getVisitorKeys<TNode extends Node>(\n  node: TNode\n): VisitorKeys<TNode>[] {\n  return t.VISITOR_KEYS[node.type] as VisitorKeys<TNode>[];\n}\n"],"mappings":"AAAA,SAASA,KAAK,IAAIC,CAAC,QAAQ,aAAa;AAUxC,eAAe,SAASC,cAAc,CACpCC,IAAW,EACW;EACtB,OAAOF,CAAC,CAACG,YAAY,CAACD,IAAI,CAACE,IAAI,CAAC;AAClC"}