{"version":3,"file":"transform.js","names":["babel","TransformCacheCollection","prepareForEval","prepareForEvalSync","evalStage","prepareForRuntime","extractStage","withLinariaMetadata","syncStages","originalCode","options","prepareStageResult","babelConfig","cache","eventEmitter","filename","metadata","code","sourceMap","inputSourceMap","type","evalStageResult","valueCache","dependencies","collectStageResult","map","extractStageResult","linaria","processors","replacements","transformSync","syncResolve","entrypoint","name","only","prepareStageResults","transform","asyncResolve"],"sources":["../src/transform.ts"],"sourcesContent":["/**\n * This file exposes transform function that:\n * - parse the passed code to AST\n * - transforms the AST using Linaria babel preset ('./babel/index.js) and additional config defined in Linaria config file or passed to bundler configuration.\n * - runs generated CSS files through default of user-defined preprocessor\n * - generates source maps for CSS files\n * - return transformed code (without Linaria template literals), generated CSS, source maps and babel metadata from transform step.\n */\n\nimport type { TransformOptions } from '@babel/core';\nimport * as babel from '@babel/core';\n\nimport { TransformCacheCollection } from './cache';\nimport prepareForEval, {\n  prepareForEvalSync,\n} from './transform-stages/1-prepare-for-eval';\nimport evalStage from './transform-stages/2-eval';\nimport prepareForRuntime from './transform-stages/3-prepare-for-runtime';\nimport extractStage from './transform-stages/4-extract';\nimport type { Options, Result, ITransformFileResult } from './types';\nimport withLinariaMetadata from './utils/withLinariaMetadata';\n\nfunction syncStages(\n  originalCode: string,\n  options: Options,\n  prepareStageResult: ITransformFileResult | undefined,\n  babelConfig: TransformOptions,\n  cache: TransformCacheCollection,\n  eventEmitter?: (ev: unknown) => void\n) {\n  const { filename } = options;\n\n  // File does not contain any tags. Return original code.\n  if (\n    !prepareStageResult ||\n    !withLinariaMetadata(prepareStageResult.metadata)\n  ) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  // *** 2nd stage ***\n\n  eventEmitter?.({ type: 'transform:stage-2:start', filename });\n\n  const evalStageResult = evalStage(cache, prepareStageResult.code, options);\n\n  eventEmitter?.({ type: 'transform:stage-2:finish', filename });\n\n  if (evalStageResult === null) {\n    return {\n      code: originalCode,\n      sourceMap: options.inputSourceMap,\n    };\n  }\n\n  const [valueCache, dependencies] = evalStageResult;\n\n  // *** 3rd stage ***\n\n  eventEmitter?.({ type: 'transform:stage-3:start', filename });\n\n  const collectStageResult = prepareForRuntime(\n    babel,\n    originalCode,\n    valueCache,\n    options,\n    babelConfig\n  );\n\n  eventEmitter?.({ type: 'transform:stage-3:finish', filename });\n\n  if (!withLinariaMetadata(collectStageResult.metadata)) {\n    return {\n      code: collectStageResult.code!,\n      sourceMap: collectStageResult.map,\n    };\n  }\n\n  // *** 4th stage\n\n  eventEmitter?.({ type: 'transform:stage-4:start', filename });\n\n  const extractStageResult = extractStage(\n    collectStageResult.metadata.linaria.processors,\n    originalCode,\n    options\n  );\n\n  eventEmitter?.({ type: 'transform:stage-4:finish', filename });\n\n  return {\n    ...extractStageResult,\n    code: collectStageResult.code ?? '',\n    dependencies,\n    replacements: [\n      ...extractStageResult.replacements,\n      ...collectStageResult.metadata.linaria.replacements,\n    ],\n    sourceMap: collectStageResult.map,\n  };\n}\n\nexport function transformSync(\n  originalCode: string,\n  options: Options,\n  syncResolve: (what: string, importer: string, stack: string[]) => string,\n  babelConfig: TransformOptions = {},\n  cache = new TransformCacheCollection(),\n  eventEmitter?: (ev: unknown) => void\n): Result {\n  const { filename } = options;\n  // *** 1st stage ***\n\n  eventEmitter?.({ type: 'transform:stage-1:start', filename });\n\n  const entrypoint = {\n    name: options.filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  };\n\n  const prepareStageResults = prepareForEvalSync(\n    babel,\n    cache,\n    syncResolve,\n    entrypoint,\n    options\n  );\n\n  eventEmitter?.({ type: 'transform:stage-1:finish', filename });\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    options,\n    prepareStageResults,\n    babelConfig,\n    cache,\n    eventEmitter\n  );\n}\n\nexport default async function transform(\n  originalCode: string,\n  options: Options,\n  asyncResolve: (\n    what: string,\n    importer: string,\n    stack: string[]\n  ) => Promise<string | null>,\n  babelConfig: TransformOptions = {},\n  cache = new TransformCacheCollection(),\n  eventEmitter?: (ev: unknown) => void\n): Promise<Result> {\n  const { filename } = options;\n\n  // *** 1st stage ***\n\n  eventEmitter?.({ type: 'transform:stage-1:start', filename });\n\n  const entrypoint = {\n    name: filename,\n    code: originalCode,\n    only: ['__linariaPreval'],\n  };\n\n  const prepareStageResults = await prepareForEval(\n    babel,\n    cache,\n    asyncResolve,\n    entrypoint,\n    options\n  );\n\n  eventEmitter?.({ type: 'transform:stage-1:finish', filename });\n\n  // *** The rest of the stages are synchronous ***\n\n  return syncStages(\n    originalCode,\n    options,\n    prepareStageResults,\n    babelConfig,\n    cache,\n    eventEmitter\n  );\n}\n"],"mappings":"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"}